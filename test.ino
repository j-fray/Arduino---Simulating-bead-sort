/**
Author: Jacob Francis
Last updated: 26/02/2012
Contact: jacob.francis107@gmail.com
Please feel free to use this code but if you do please accredit the parts you have used to myself
**/

#include <LedControl.h>

LedControl lc=LedControl(2,3,4,1); //Top left matrix
LedControl lc2=LedControl(5,6,7,1); //Top right matrix
LedControl lc3=LedControl(8,9,10,1); //Middle left matrix
LedControl lc4=LedControl(11,12,13,1); //Middle right matrix
LedControl lc5=LedControl(14,15,16,1); //Bottom left matrix
LedControl lc6=LedControl(17,18,19,1); //Bottom right matrix

int maxSteps = 24;

//////////////////////////////////////// BEGINNING OF STEP DEFINITIONS /////////////////////////////////////////
/*
Each step consists of 48 bytes, each byte is represented literally on the relevant matrix e.g. 11110000 will light up the first 4 LEDs of that row and so on.
The top left matrix takes in the first 8 bytes, the top right matrix the second 8 bytes and so on
*/
//---------------------------------- STEP0 --------------------------------// 
byte step0[48]={ 
B11111111,
B11000000,
B11111111,
B11111111,
B11000000,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B10000000,
B00000000,
B11000000,
B11111100,
B11111110,
B11000000,
B11111111,
B11111111,
B11111111,
B11110000,
B11111110,
B11111100,
B11111000,
B00000000,
B00000000,
B00000000,
B10000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11110000,
B11111000,
B11111111,
B00000000,
B00000000,
B11100000,
B11110000,
B11111111,
B00000000,
B00000000,
B11000000
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP1 --------------------------------//
byte step1[48]={                
B11000000,
B11111111,
B11000000,
B11111111,
B11111111,
B11000000,
B11111111,
B11111111,
B00000000,
B11111111,
B00000000,
B00000000,
B10000000,
B00000000,
B11000000,
B11111100,
B11111111,
B11110000,
B11111111,
B11111111,
B11111111,
B11110000,
B11111110,
B11111100,
B11111110,
B00000000,
B00000000,
B00000000,
B10000000,
B00000000,
B00000000,
B00000000,
B11111000,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111000,
B11111111,
B00000000,
B00000000,
B00000000,
B11100000,
B11110000,
B11111111,
B00000000,
B11000000
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP2 --------------------------------// 
byte step2[48]={               
B11000000,
B11000000,
B11111111,
B11000000,
B11111111,
B11111111,
B11110000,
B11111111,
B00000000,
B00000000,
B11111111,
B00000000,
B00000000,
B10000000,
B00000000,
B11000000,
B11111111,
B11111111,
B11110000,
B11111111,
B11111111,
B11111111,
B11111000,
B11111110,
B11111100,
B11111110,
B00000000,
B00000000,
B00000000,
B10000000,
B00000000,
B00000000,
B11111100,
B11111000,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B00000000,
B00000000,
B11100000,
B11110000,
B11111111,
B11000000
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP3 --------------------------------//
byte step3[48]={                
B11000000,
B11000000,
B11000000,
B11111111,
B11110000,
B11111111,
B11111111,
B11110000,
B00000000,
B00000000,
B00000000,
B11111111,
B00000000,
B00000000,
B10000000,
B00000000,
B11111111,
B11111111,
B11111111,
B11111000,
B11111111,
B11111111,
B11111111,
B11111000,
B11000000,
B11111100,
B11111110,
B00000000,
B00000000,
B00000000,
B10000000,
B00000000,
B11111110,
B11111100,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B00000000,
B00000000,
B11000000,
B11100000,
B11110000,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP4 --------------------------------//  
byte step4[48]={              
B11000000,
B11000000,
B11000000,
B11110000,
B11111111,
B11110000,
B11111111,
B11111111,
B00000000,
B00000000,
B00000000,
B00000000,
B11111111,
B00000000,
B00000000,
B10000000,
B11111000,
B11111111,
B11111111,
B11111111,
B11111000,
B11111111,
B11111111,
B11111111,
B00000000,
B11000000,
B11111100,
B11111110,
B00000000,
B00000000,
B00000000,
B10000000,
B11111100,
B11111110,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B00000000,
B00000000,
B11000000,
B11100000,
B11110000,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP5 --------------------------------//
byte step5[48]={                
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111111,
B11111000,
B11111111,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111111,
B00000000,
B00000000,
B11111111,
B11111000,
B11111111,
B11111111,
B11111111,
B11111100,
B11111111,
B11111111,
B10000000,
B00000000,
B11000000,
B11111100,
B11111110,
B00000000,
B00000000,
B00000000,
B11111111,
B11111110,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B10000000,
B00000000,
B00000000,
B00000000,
B11000000,
B11100000,
B11110000,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP6 --------------------------------// 
byte step6[48]={               
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111000,
B11111111,
B11111000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111111,
B00000000,
B11111111,
B11111111,
B11111100,
B11111111,
B11111111,
B11111111,
B11111110,
B11111111,
B00000000,
B10000000,
B00000000,
B11000000,
B11111100,
B11111110,
B00000000,
B00000000,
B11111111,
B11111111,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B10000000,
B00000000,
B00000000,
B11000000,
B11100000,
B11110000,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP7 --------------------------------//  
byte step7[48]={                   
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111000,
B11111000,
B11111111,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111111,
B11111100,
B11111111,
B11111111,
B11111110,
B11111111,
B11111111,
B11111111,
B11111110,
B00000000,
B00000000,
B10000000,
B00000000,
B11000000,
B11111100,
B11111110,
B00000000,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B10000000,
B00000000,
B11000000,
B11100000,
B11110000,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP8 --------------------------------//  
byte step8[48]={                   
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111000,
B11111000,
B11111100,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111111,
B11111110,
B11111111,
B11111111,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B10000000,
B00000000,
B11000000,
B11111100,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B00000000,
B10000000,
B11000000,
B11100000,
B11110000,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP9 --------------------------------// 
byte step9[48]={  
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111000,
B11111000,
B11111100,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111110,
B11111111,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B11111111,
B00000000,
B00000000,
B10000000,
B00000000,
B11000000,
B11111100,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111110,
B00000000,
B00000000,
B10000000,
B11000000,
B11100000,
B11110000,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP10 --------------------------------//  
byte step10[48]={                   
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111000,
B11111000,
B11111100,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111110,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B11111111,
B00000000,
B00000000,
B10000000,
B00000000,
B11000000,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111100,
B11111110,
B00000000,
B10000000,
B11000000,
B11100000,
B11110000,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP11 --------------------------------//  
byte step11[48]={  
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111000,
B11111000,
B11111100,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111110,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B00000000,
B11111111,
B00000000,
B00000000,
B10000000,
B00000000,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11000000,
B11111100,
B11111110,
B10000000,
B11000000,
B11100000,
B11110000,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP12 --------------------------------// 
byte step12[48]={   
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111000,
B11111000,
B11111100,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111110,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B00000000,
B00000000,
B11111111,
B00000000,
B00000000,
B10000000,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B10000000,
B11000000,
B11111100,
B11111110,
B11000000,
B11100000,
B11110000,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP13 --------------------------------//  
byte step13[48]={  
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111000,
B11111000,
B11111100,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111110,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111111,
B00000000,
B10000000,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B10000000,
B11000000,
B11000000,
B11111100,
B11111110,
B11100000,
B11110000,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP14 --------------------------------// 
byte step14[48]={  
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111000,
B11111000,
B11111100,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111110,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111111,
B10000000,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B10000000,
B11000000,
B11000000,
B11100000,
B11111100,
B11111110,
B11110000,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP15 --------------------------------//  
byte step15[48]={ 
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111000,
B11111000,
B11111100,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111110,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B10000000,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B10000000,
B11000000,
B11000000,
B11100000,
B11110000,
B11111100,
B11111110,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP16 --------------------------------// 
byte step16[48]={  
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111000,
B11111000,
B11111100,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111110,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B10000000,
B10000000,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11000000,
B11000000,
B11100000,
B11110000,
B11111100,
B11111110,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP17 --------------------------------// 
byte step17[48]={  
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111000,
B11111000,
B11111100,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111110,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B10000000,
B10000000,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11000000,
B11111111,
B11000000,
B11100000,
B11110000,
B11111100,
B11111110,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP18 --------------------------------// 
byte step18[48]={  
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111000,
B11111000,
B11111100,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111110,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B10000000,
B10000000,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11000000,
B11000000,
B11111111,
B11100000,
B11110000,
B11111100,
B11111110,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP19 --------------------------------//
byte step19[48]={   
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111000,
B11111000,
B11111100,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111110,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B10000000,
B10000000,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11000000,
B11000000,
B11100000,
B11111111,
B11110000,
B11111100,
B11111110,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP20 --------------------------------// 
byte step20[48]={  
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111000,
B11111000,
B11111100,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111110,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B10000000,
B10000000,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11000000,
B11000000,
B11100000,
B11110000,
B11111111,
B11111100,
B11111110,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP21 --------------------------------// 
byte step21[48]={  
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111000,
B11111000,
B11111100,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111110,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B10000000,
B10000000,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11000000,
B11000000,
B11100000,
B11110000,
B11111100,
B11111111,
B11111110,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP22 --------------------------------// 
byte step22[48]={  
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111000,
B11111000,
B11111100,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111110,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B10000000,
B10000000,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11000000,
B11000000,
B11100000,
B11110000,
B11111100,
B11111110,
B11111111,
B11111111
};
//-------------------------------------------------------------------------//

//---------------------------------- STEP23 --------------------------------// 
byte step23[48]={  
B11000000,
B11000000,
B11000000,
B11110000,
B11110000,
B11111000,
B11111000,
B11111100,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B11111110,
B11111110,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B10000000,
B10000000,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11111111,
B11000000,
B11000000,
B11100000,
B11110000,
B11111100,
B11111110,
B11111111,
B11111111
};
//-------------------------------------------------------------------------//

//////////////////////////////////////// END OF STEP DEFINITIONS /////////////////////////////////////////

void setup() {  
  lc.shutdown(0,false); //Wake up the MAX7219 as it will be in power saving mode
  lc2.shutdown(0,false);  
  lc3.shutdown(0,false);  
  lc4.shutdown(0,false);  
  lc5.shutdown(0,false);  
  lc6.shutdown(0,false);    
  
  lc.setIntensity(0,15); //Max intensity 15, min intensity 0
  lc2.setIntensity(0,15); 
  lc3.setIntensity(0,15);
  lc4.setIntensity(0,15);
  lc5.setIntensity(0,15); 
  lc6.setIntensity(0,15);
  
  lc.clearDisplay(0);  //Clear anything previously on the display
  lc2.clearDisplay(0);  
  lc3.clearDisplay(0);  
  lc4.clearDisplay(0);  
  lc5.clearDisplay(0);  
  lc6.clearDisplay(0);
}

/*
Contains the assignment statements for each matrix and each step
*/
void writeArduinoOnMatrix(){

//Code to simulate a bit of acceleration by decreasing the delay time between each step  
int delayTime=600;

int timeArray[maxSteps-1];  
for(int i=0;i<maxSteps-1;i++){    
    if(delayTime > 0){      
        timeArray[i] = delayTime;      
        delayTime = delayTime-26;    
    }  
}  

//////////////////////////////////// STEPS ASSIGNMENTS ////////////////////////////////// 

 
//---------------------------------- STEP0 --------------------------------//    
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step0[7-i]); //Arrays are assigned in reverse due to the pin layout being upside down
        //Top right LED matrix  
        lc2.setColumn(0,i,step0[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step0[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step0[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step0[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step0[47-i]); 
}
//-------------------------------------------------------------------------//  
      
delay(timeArray[0]);

//---------------------------------- STEP1 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step1[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step1[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step1[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step1[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step1[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step1[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[1]);  

//---------------------------------- STEP2 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step2[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step2[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step2[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step2[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step2[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step2[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[2]);  

//---------------------------------- STEP3 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step3[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step3[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step3[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step3[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step3[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step3[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[3]);  

//---------------------------------- STEP4 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step4[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step4[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step4[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step4[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step4[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step4[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[4]);  

//---------------------------------- STEP5 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step5[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step5[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step5[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step5[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step5[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step5[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[5]);  

//---------------------------------- STEP6 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step6[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step6[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step6[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step6[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step6[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step6[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[6]);  

//---------------------------------- STEP7 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step7[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step7[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step7[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step7[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step7[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step7[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[7]);  

//---------------------------------- STEP8 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step8[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step8[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step8[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step8[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step8[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step8[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[8]);  

//---------------------------------- STEP9 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step9[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step9[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step9[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step9[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step9[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step9[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[9]);  

//---------------------------------- STEP10 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step10[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step10[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step10[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step10[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step10[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step10[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[10]);  

//---------------------------------- STEP11 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step11[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step11[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step11[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step11[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step11[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step11[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[11]);  

//---------------------------------- STEP12 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step12[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step12[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step12[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step12[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step12[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step12[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[12]);  

//---------------------------------- STEP13 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step13[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step13[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step13[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step13[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step13[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step13[47-i]); 
}
//-------------------------------------------------------------------------//     

delay(timeArray[13]);

//---------------------------------- STEP14 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step14[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step14[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step14[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step14[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step14[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step14[47-i]); 
}
//-------------------------------------------------------------------------// 

delay(timeArray[14]);  

//---------------------------------- STEP15 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step15[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step15[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step15[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step15[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step15[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step15[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[15]);  

//---------------------------------- STEP16 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step16[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step16[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step16[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step16[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step16[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step16[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[16]);  

//---------------------------------- STEP17 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step17[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step17[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step17[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step17[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step17[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step17[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[17]);  

//---------------------------------- STEP18 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step18[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step18[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step18[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step18[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step18[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step18[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[18]);  

//---------------------------------- STEP19 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step19[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step19[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step19[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step19[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step19[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step19[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[19]);  

//---------------------------------- STEP20 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step20[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step20[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step20[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step20[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step20[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step20[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[20]);  

//---------------------------------- STEP21 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step21[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step21[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step21[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step21[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step21[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step21[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[21]);  

//---------------------------------- STEP22 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step22[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step22[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step22[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step22[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step22[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step22[47-i]); 
}
//-------------------------------------------------------------------------//          

delay(timeArray[22]);  

//---------------------------------- STEP23 --------------------------------//  
for(int i=0;i<8;i++){  
        //Top left LED matrix  
	lc.setColumn(0,i,step23[7-i]); 
        //Top right LED matrix  
        lc2.setColumn(0,i,step23[15-i]); 
        //Middle left LED matrix
        lc3.setColumn(0,i,step23[23-i]);
        //Middle right LED matrix  
        lc4.setColumn(0,i,step23[31-i]);
        //Bottom left LED matrix 
        lc5.setColumn(0,i,step23[39-i]);
        //Bottom right LED matrix  
        lc6.setColumn(0,i,step23[47-i]); 
}
//-------------------------------------------------------------------------//        

delay(2000); //Longer delay at end      

delay(500); //start/end delay (IMPORTANT: the program will not work without this delay) 

//////////////////////////// END OF STEP ASSIGNMENTS //////////////////////////////////
}

void loop() {   
	writeArduinoOnMatrix();
}
